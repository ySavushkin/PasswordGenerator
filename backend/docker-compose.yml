#V5
version: '3.8'

services:
  demo:
    container_name: password_gen_demo
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/PasswordGenerator_DB
      SPRING_DATASOURCE_USERNAME: user_n
      SPRING_DATASOURCE_PASSWORD: user_password
    depends_on:
      - db
    networks:
      - app_network

  db:
    image: postgres:13
    container_name: password_gen_db
    restart: always
    environment:
      POSTGRES_DB: PasswordGenerator_DB
      POSTGRES_USER: user_n
      POSTGRES_PASSWORD: user_password
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./PasswordGenerator_DB.sql:/docker-entrypoint-initdb.d/PasswordGenerator_DB.sql
    ports:
      - "5432:5432"
    networks:
      - app_network

networks:
  app_network:
    #external: true
    driver: bridge

#////////////////////////////////////////////////////////////////////////////////////////////////////////
#Підняття стеків
#docker-compose -f docker-compose.yml -f docker-compose-locust.yml up -d

#  docker compose down -v
#Або це видалить монтовані данні docker compose down -v; Remove-Item -Recurse -Force .\data\db

#  docker compose up --build -d

#Перевірка логів контейнерів
#docker logs password_gen_demo
#docker logs password_gen_db

#???
#1)Перевірте з'єднання з базою даних:
#docker exec -it password_gen_db psql -U user_n -d PasswordGenerator_DB
#2)Перевірити всі користувачів у базі даних:
#\du
#3)Перевірка наявності таблиць у базі даних:
#\dt
#4)Перевірка прав доступу для користувача:
#\l
#5)Вихід:
#\q

#Підняття стеків
#docker-compose -f docker-compose.yml up -d
#docker-compose -f docker-compose-locust.yml up -d

#Або ось так
#docker-compose -f docker-compose.yml -f docker-compose-locust.yml up -d

#виконує очистку всієї Docker-системи від непотрібних об'єктів
#docker system prune -a

#docker network ls
#docker network inspect
